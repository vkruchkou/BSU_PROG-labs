#include "h.h"
#pragma once
/*Создать параметризованный класс данных (шаблон)- массив данных о студентах(с динамическим выделением памяти) - CONTAINER".
Этот класс предназначен для ввода, хранения и вывода информации. Переменными-членами класса являются количество записей и указатель на массив структур.
Данные о каждой записи хранятся в структуре.
Необходимо проверить шаблон для трех типов (классов): Container1,  Container2,  Container3, Для каждой структуры должен быть определен оператор вывода в текстовый поток (файл) (ореratог <<). Эти операторы понадобятся для реализации функций основных классов.
1) Для шаблона "CONTAINER" кроме обязательных конструктора, деструктора и т.д., реализовать основные функции для работы с массивом:
a)	ввод из текстового потока (файла) массива данных (operator >>)
b)	вывод в текстовый поток (файл) массива данных (operator <<)
c)	вывод в бинарный поток (файл) массива данных
d)	вывод на консоль массива данных перегрузка оператора
e)	operator=
f)	доступ к элементу (operator[])
g)	создать па основе этих данных массив  новый массив (функц. 1 согласно индивидуальному варианту).
h)	Упорядочить полученный массив в порядке (функц. 3  согласно индивидуальному варианту).
2) Создать отдельную функцию шаблон, с параметром класс-шаблон CONTAINER и элемент структуры (функц. 2 согласно индивидуальному варианту)

*/
using namespace std;
int main()
{
	setlocale(LC_ALL, "rus");
	//Container1 a((char*)"lol/0",13);
	try {
	CONTAINER<Container1> c1(3);
	cin >> c1;
	CONTAINER<Container1> c2(3);
	cin >> c2;
	CONTAINER<Container1> c3;
	c3.peresech(c1, c2);
	cout << c3;
	}
	catch (const std::exception & ex)
	{
		cout << "Вызвано исключение: ";
		cout << ex.what();
	}
	system("pause");
	return 0;
}